#######################################################################
# Wiki.js - 配置文件                                                   #
#######################################################################
# 完整文档 + 示例:
# https://docs.requarks.io/install

# ---------------------------------------------------------------------
# 服务器监听端口
# ---------------------------------------------------------------------

port: 3000

# ---------------------------------------------------------------------
# 数据库配置
# ---------------------------------------------------------------------
# 支持的数据库引擎:
# - postgres = PostgreSQL 9.5 或更高版本
# - mysql = MySQL 8.0 或更高版本 (5.7.8 部分支持，请参考文档)
# - mariadb = MariaDB 10.2.7 或更高版本
# - mssql = MS SQL Server 2012 或更高版本
# - sqlite = SQLite 3.9 或更高版本

db:
  type: postgres

  # 仅限 PostgreSQL / MySQL / MariaDB / MS SQL Server:
  host: localhost
  port: 5432
  user: wikijs
  pass: wikijsrocks
  db: wiki
  ssl: false

  # 可选 - 仅限 PostgreSQL / MySQL / MariaDB:
  # -> 取消注释下方需要的行并将 `auto` 设置为 false
  # -> 完整的选项列表: https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options
  sslOptions:
    auto: true
    # rejectUnauthorized: false
    # ca: path/to/ca.crt
    # cert: path/to/cert.crt
    # key: path/to/key.pem
    # pfx: path/to/cert.pfx
    # passphrase: xyz123

  # 可选 - 仅限 PostgreSQL:
  schema: public

  # 仅限 SQLite:
  storage: path/to/database.sqlite

#######################################################################
# 高级选项                                                             #
#######################################################################
# 除非你知道自己在做什么，否则请勿更改！

# ---------------------------------------------------------------------
# SSL/TLS 设置
# ---------------------------------------------------------------------
# 如果需要比下方提供的更高级的选项，请考虑使用反向代理（如 nginx）。

ssl:
  enabled: false
  port: 3443

  # 使用的提供者，可选值: custom, letsencrypt
  provider: custom

  # ++++++ 仅限 custom 模式 ++++++
  # 证书格式，'pem' 或 'pfx':
  format: pem
  # 使用 PEM 格式:
  key: /ssl/cert.key
  cert: /ssl/cert.pem
  # 使用 PFX 格式:
  pfx: path/to/cert.pfx
  # 使用加密 PEM / PFX 密钥时的密码短语 (默认: null):
  passphrase: null
  # Diffie Hellman 参数，密钥长度应大于或等于 1024 位 (默认: null):
  dhparam: null

  # ++++++ 仅限 letsencrypt 模式 ++++++
  domain: wiki.yourdomain.com
  subscriberEmail: admin@example.com

# ---------------------------------------------------------------------
# 数据库连接池选项
# ---------------------------------------------------------------------
# 所有可用选项请参考 https://github.com/vincit/tarn.js

pool:
  # min: 2
  # max: 10

# ---------------------------------------------------------------------
# 服务器监听的 IP 地址
# ---------------------------------------------------------------------
# 使用 0.0.0.0 监听所有网络接口

bindIP: 0.0.0.0

# ---------------------------------------------------------------------
# 日志级别
# ---------------------------------------------------------------------
# 可选值: error, warn, info (默认), verbose, debug, silly

logLevel: info

# ---------------------------------------------------------------------
# 日志格式
# ---------------------------------------------------------------------
# 日志输出格式，可选值: default, json

logFormat: default

# ---------------------------------------------------------------------
# 离线模式
# ---------------------------------------------------------------------
# 如果你的服务器无法访问互联网，请设置为 true 并手动下载离线文件进行旁加载。

offline: false

# ---------------------------------------------------------------------
# 高可用性
# ---------------------------------------------------------------------
# 如果你有多个并发实例使用同一个数据库运行（例如 Kubernetes pods / 负载均衡实例），
# 请设置为 true。否则保持 false。使用此功能必须使用 PostgreSQL。

ha: false

# ---------------------------------------------------------------------
# 数据路径
# ---------------------------------------------------------------------
# 用于缓存和临时用户上传的可写数据路径。
dataPath: ./data

# ---------------------------------------------------------------------
# 请求体解析器限制
# ---------------------------------------------------------------------
# 可解析的 API 请求体的最大大小。不影响文件上传。

bodyParserLimit: 5mb